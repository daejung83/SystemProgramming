[
  {
    "timestamp": "2016-02-03 22:50:04.352401", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==24004== Memcheck, a memory error detector\n==24004== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==24004== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==24004== Command: ./mp/vector/svn/ddkim9/vector/vector_test 18\n==24004== \n==24004== \n==24004== HEAP SUMMARY:\n==24004==     in use at exit: 0 bytes in 0 blocks\n==24004==   total heap usage: 12 allocs, 12 frees, 225 bytes allocated\n==24004== \n==24004== All heap blocks were freed -- no leaks are possible\n==24004== \n==24004== For counts of detected and suppressed errors, rerun with: -v\n==24004== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==24042== Memcheck, a memory error detector\n==24042== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==24042== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==24042== Command: ././document_test 3\n==24042== \ndocument_test: document.c:41: size_t Document_size(Document *): Assertion `document' failed.\n==24042== \n==24042== HEAP SUMMARY:\n==24042==     in use at exit: 113 bytes in 3 blocks\n==24042==   total heap usage: 5 allocs, 2 frees, 307 bytes allocated\n==24042== \n==24042== 113 (8 direct, 105 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3\n==24042==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==24042==    by 0x40090A: Document_create (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==24042==    by 0x400FCF: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==24042==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==24042== \n==24042== LEAK SUMMARY:\n==24042==    definitely lost: 8 bytes in 1 blocks\n==24042==    indirectly lost: 105 bytes in 2 blocks\n==24042==      possibly lost: 0 bytes in 0 blocks\n==24042==    still reachable: 0 bytes in 0 blocks\n==24042==         suppressed: 0 bytes in 0 blocks\n==24042== \n==24042== For counts of detected and suppressed errors, rerun with: -v\n==24042== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-04 14:42:03.392831", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==4795== Memcheck, a memory error detector\n==4795== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==4795== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==4795== Command: ./mp/vector/svn/ddkim9/vector/vector_test 18\n==4795== \n==4795== \n==4795== HEAP SUMMARY:\n==4795==     in use at exit: 0 bytes in 0 blocks\n==4795==   total heap usage: 12 allocs, 12 frees, 225 bytes allocated\n==4795== \n==4795== All heap blocks were freed -- no leaks are possible\n==4795== \n==4795== For counts of detected and suppressed errors, rerun with: -v\n==4795== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==4833== Memcheck, a memory error detector\n==4833== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==4833== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==4833== Command: ././document_test 3\n==4833== \ndocument_test: document.c:41: size_t Document_size(Document *): Assertion `document' failed.\n==4833== \n==4833== HEAP SUMMARY:\n==4833==     in use at exit: 113 bytes in 3 blocks\n==4833==   total heap usage: 5 allocs, 2 frees, 307 bytes allocated\n==4833== \n==4833== 113 (8 direct, 105 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3\n==4833==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==4833==    by 0x40090A: Document_create (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==4833==    by 0x400FCF: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==4833==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==4833== \n==4833== LEAK SUMMARY:\n==4833==    definitely lost: 8 bytes in 1 blocks\n==4833==    indirectly lost: 105 bytes in 2 blocks\n==4833==      possibly lost: 0 bytes in 0 blocks\n==4833==    still reachable: 0 bytes in 0 blocks\n==4833==         suppressed: 0 bytes in 0 blocks\n==4833== \n==4833== For counts of detected and suppressed errors, rerun with: -v\n==4833== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-05 02:05:45.202763", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==11144== Memcheck, a memory error detector\n==11144== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==11144== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==11144== Command: ./mp/vector/svn/ddkim9/vector/vector_test 18\n==11144== \n==11144== \n==11144== HEAP SUMMARY:\n==11144==     in use at exit: 0 bytes in 0 blocks\n==11144==   total heap usage: 15 allocs, 15 frees, 477 bytes allocated\n==11144== \n==11144== All heap blocks were freed -- no leaks are possible\n==11144== \n==11144== For counts of detected and suppressed errors, rerun with: -v\n==11144== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==11182== Memcheck, a memory error detector\n==11182== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==11182== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==11182== Command: ././document_test 3\n==11182== \n==11182== Invalid write of size 1\n==11182==    at 0x4C2CCA0: strcpy (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==11182==    by 0x400B52: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==11182==  Address 0x53faee2 is 0 bytes after a block of size 50 alloc'd\n==11182==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==11182==    by 0x400B39: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==11182== \n==11182== Invalid write of size 1\n==11182==    at 0x4C2CCB3: strcpy (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==11182==    by 0x400B52: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==11182==  Address 0x53faeea is 8 bytes after a block of size 50 alloc'd\n==11182==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==11182==    by 0x400B39: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==11182== \n==11182== Invalid read of size 1\n==11182==    at 0x4C2CBD4: __GI_strlen (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==11182==    by 0x50A580E: fputs (in /usr/lib64/libc-2.17.so)\n==11182==    by 0x400B62: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==11182==  Address 0x53faee2 is 0 bytes after a block of size 50 alloc'd\n==11182==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==11182==    by 0x400B39: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==11182== \n==11182== Invalid read of size 4\n==11182==    at 0x50A5812: fputs (in /usr/lib64/libc-2.17.so)\n==11182==    by 0x400B62: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==11182==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\n==11182== \n==11182== \n==11182== Process terminating with default action of signal 11 (SIGSEGV)\n==11182==  Access not within mapped region at address 0x0\n==11182==    at 0x50A5812: fputs (in /usr/lib64/libc-2.17.so)\n==11182==    by 0x400B62: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==11182==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==11182==  If you believe this happened as a result of a stack\n==11182==  overflow in your program's main thread (unlikely but\n==11182==  possible), you can try to increase the size of the\n==11182==  main thread stack using the --main-stacksize= flag.\n==11182==  The main thread stack size used in this run was 8388608.\n==11182== \n==11182== HEAP SUMMARY:\n==11182==     in use at exit: 730 bytes in 14 blocks\n==11182==   total heap usage: 25 allocs, 11 frees, 2,099 bytes allocated\n==11182== \n==11182== LEAK SUMMARY:\n==11182==    definitely lost: 0 bytes in 0 blocks\n==11182==    indirectly lost: 0 bytes in 0 blocks\n==11182==      possibly lost: 0 bytes in 0 blocks\n==11182==    still reachable: 730 bytes in 14 blocks\n==11182==         suppressed: 0 bytes in 0 blocks\n==11182== Reachable blocks (those to which a pointer was found) are not shown.\n==11182== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==11182== \n==11182== For counts of detected and suppressed errors, rerun with: -v\n==11182== ERROR SUMMARY: 19 errors from 4 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-06 00:03:53.115688", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==28430== Memcheck, a memory error detector\n==28430== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==28430== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==28430== Command: ./mp/vector/svn/ddkim9/vector/vector_test 18\n==28430== \n==28430== \n==28430== HEAP SUMMARY:\n==28430==     in use at exit: 0 bytes in 0 blocks\n==28430==   total heap usage: 15 allocs, 15 frees, 477 bytes allocated\n==28430== \n==28430== All heap blocks were freed -- no leaks are possible\n==28430== \n==28430== For counts of detected and suppressed errors, rerun with: -v\n==28430== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==28468== Memcheck, a memory error detector\n==28468== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==28468== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==28468== Command: ././document_test 3\n==28468== \n==28468== Invalid write of size 1\n==28468==    at 0x4C2CCA0: strcpy (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==28468==    by 0x400B52: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==28468==  Address 0x53faee2 is 0 bytes after a block of size 50 alloc'd\n==28468==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==28468==    by 0x400B39: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==28468== \n==28468== Invalid write of size 1\n==28468==    at 0x4C2CCB3: strcpy (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==28468==    by 0x400B52: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==28468==  Address 0x53faeea is 8 bytes after a block of size 50 alloc'd\n==28468==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==28468==    by 0x400B39: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==28468== \n==28468== Invalid read of size 1\n==28468==    at 0x4C2CBD4: __GI_strlen (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==28468==    by 0x50A580E: fputs (in /usr/lib64/libc-2.17.so)\n==28468==    by 0x400B62: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==28468==  Address 0x53faee2 is 0 bytes after a block of size 50 alloc'd\n==28468==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==28468==    by 0x400B39: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==28468== \n==28468== Invalid read of size 4\n==28468==    at 0x50A5812: fputs (in /usr/lib64/libc-2.17.so)\n==28468==    by 0x400B62: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==28468==  Address 0x0 is not stack'd, malloc'd or (recently) free'd\n==28468== \n==28468== \n==28468== Process terminating with default action of signal 11 (SIGSEGV)\n==28468==  Access not within mapped region at address 0x0\n==28468==    at 0x50A5812: fputs (in /usr/lib64/libc-2.17.so)\n==28468==    by 0x400B62: Document_write_to_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x4014F0: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==28468==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==28468==  If you believe this happened as a result of a stack\n==28468==  overflow in your program's main thread (unlikely but\n==28468==  possible), you can try to increase the size of the\n==28468==  main thread stack using the --main-stacksize= flag.\n==28468==  The main thread stack size used in this run was 8388608.\n==28468== \n==28468== HEAP SUMMARY:\n==28468==     in use at exit: 730 bytes in 14 blocks\n==28468==   total heap usage: 25 allocs, 11 frees, 2,099 bytes allocated\n==28468== \n==28468== LEAK SUMMARY:\n==28468==    definitely lost: 0 bytes in 0 blocks\n==28468==    indirectly lost: 0 bytes in 0 blocks\n==28468==      possibly lost: 0 bytes in 0 blocks\n==28468==    still reachable: 730 bytes in 14 blocks\n==28468==         suppressed: 0 bytes in 0 blocks\n==28468== Reachable blocks (those to which a pointer was found) are not shown.\n==28468== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==28468== \n==28468== For counts of detected and suppressed errors, rerun with: -v\n==28468== ERROR SUMMARY: 19 errors from 4 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-07 14:47:21.047177", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==2063== Memcheck, a memory error detector\n==2063== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==2063== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==2063== Command: ./mp/vector/svn/ddkim9/vector/vector_test 18\n==2063== \n==2063== \n==2063== HEAP SUMMARY:\n==2063==     in use at exit: 0 bytes in 0 blocks\n==2063==   total heap usage: 14 allocs, 14 frees, 396 bytes allocated\n==2063== \n==2063== All heap blocks were freed -- no leaks are possible\n==2063== \n==2063== For counts of detected and suppressed errors, rerun with: -v\n==2063== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==2093== Memcheck, a memory error detector\n==2093== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==2093== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==2093== Command: ././document_test 3\n==2093== \nIncorrect size of document: 1\n==2093== \n==2093== HEAP SUMMARY:\n==2093==     in use at exit: 559 bytes in 1 blocks\n==2093==   total heap usage: 22 allocs, 21 frees, 3,421 bytes allocated\n==2093== \n==2093== 559 bytes in 1 blocks are definitely lost in loss record 1 of 1\n==2093==    at 0x4C2BB4A: realloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==2093==    by 0x50A61A2: getdelim (in /usr/lib64/libc-2.17.so)\n==2093==    by 0x400C32: Document_create_from_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==2093==    by 0x40144A: test_write_ten_line_file (in /home/festekj2/Autograder/mp/vector/svn/ddkim9/vector/document_test)\n==2093==    by 0x505AAF4: (below main) (in /usr/lib64/libc-2.17.so)\n==2093== \n==2093== LEAK SUMMARY:\n==2093==    definitely lost: 559 bytes in 1 blocks\n==2093==    indirectly lost: 0 bytes in 0 blocks\n==2093==      possibly lost: 0 bytes in 0 blocks\n==2093==    still reachable: 0 bytes in 0 blocks\n==2093==         suppressed: 0 bytes in 0 blocks\n==2093== \n==2093== For counts of detected and suppressed errors, rerun with: -v\n==2093== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-08 02:47:34.073209", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past the current capacity", 
        "name": "resize_past_capacity_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and set/get elements", 
        "name": "resize_set_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending then checking/getting", 
        "name": "append_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending some elements and checking/getting", 
        "name": "append_few_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "name": "append_100_check_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "name": "append_1mil_check_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize past capacity and set/get elements", 
        "name": "resize_past_set_get_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "name": "resize_set_resizesmall_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing greater than double capacity", 
        "name": "resize_greater_double_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "name": "secret_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing to 11 then 20.", 
        "name": "resize_11_20_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resize and check that all elements are NULL", 
        "name": "resize_check_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending NULL", 
        "name": "append_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Appending an empty string", 
        "name": "append_empty_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set null at random index", 
        "name": "set_NULL_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Set an empty string at random index", 
        "name": "set_empty_string_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "name": "resize_check_no_alloc_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "name": "Big_test", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting One entry", 
        "name": "insert_one", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting a bunch of times", 
        "name": "insert_many", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Inserting beyond index", 
        "name": "insert_beyond_index", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a few entries...", 
        "name": "delete_small_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Deleting a lot...", 
        "name": "delete_full_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Vector: Checking for memory issues for vector.", 
        "name": "check_memory_vector", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `vector_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "name": "document_empty_file", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "name": "document_one_line", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "name": "document_ten_line", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "name": "document_multiple_write_read", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "name": "document_empty_lines", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "name": "document_check_memory", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\nmake: *** No rule to make target `document_test'.  Stop.\n"
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-08 02:50:44.950528", 
    "testcases": [
      {
        "description": "Vector: Resize past the current capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_capacity_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending then checking/getting", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending some elements and checking/getting", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_few_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 100 times and checking/getting elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_100_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending 1000000 times and checking/getting elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_1mil_check_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize past capacity and set/get elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_past_set_get_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize, set elements resize smaller then get get all", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_set_resizesmall_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing greater than double capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_greater_double_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Secret test. Hope you don't fail this one...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "secret_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing to 11 then 20.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_11_20_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resize and check that all elements are NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Appending an empty string", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "append_empty_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set null at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_NULL_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Set an empty string at random index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "set_empty_string_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Resizing under capacity and checking for no allocs.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "resize_check_no_alloc_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Too much stuff happening to count, but basically everything.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Big_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting One entry", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_one", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting a bunch of times", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_many", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Inserting beyond index", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "insert_beyond_index", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a few entries...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_small_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Deleting a lot...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "delete_full_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Vector: Checking for memory issues for vector.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==28864== Memcheck, a memory error detector\n==28864== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==28864== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==28864== Command: ./mp/vector/svn/ddkim9/vector/vector_test 18\n==28864== \n==28864== \n==28864== HEAP SUMMARY:\n==28864==     in use at exit: 0 bytes in 0 blocks\n==28864==   total heap usage: 14 allocs, 14 frees, 396 bytes allocated\n==28864== \n==28864== All heap blocks were freed -- no leaks are possible\n==28864== \n==28864== For counts of detected and suppressed errors, rerun with: -v\n==28864== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "check_memory_vector", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document is empty.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_file", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 1 line in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_one_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_ten_line", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file multiple times with changes in between.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_multiple_write_read", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has some empty lines.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "document_empty_lines", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==28894== Memcheck, a memory error detector\n==28894== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==28894== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==28894== Command: ././document_test 3\n==28894== \nIncorrect size of document: 0\n==28894== \n==28894== HEAP SUMMARY:\n==28894==     in use at exit: 568 bytes in 1 blocks\n==28894==   total heap usage: 20 allocs, 19 frees, 2,303 bytes allocated\n==28894== \n==28894== LEAK SUMMARY:\n==28894==    definitely lost: 0 bytes in 0 blocks\n==28894==    indirectly lost: 0 bytes in 0 blocks\n==28894==      possibly lost: 0 bytes in 0 blocks\n==28894==    still reachable: 568 bytes in 1 blocks\n==28894==         suppressed: 0 bytes in 0 blocks\n==28894== Reachable blocks (those to which a pointer was found) are not shown.\n==28894== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==28894== \n==28894== For counts of detected and suppressed errors, rerun with: -v\n==28894== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "document_check_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-09}"
  }, 
  {
    "timestamp": "2016-02-09 09:00:54.613160", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_capacity_test", 
        "description": "Vector: Resize past the current capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_set_get_test", 
        "description": "Vector: Resize and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_get_test", 
        "description": "Vector: Appending then checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_few_get_test", 
        "description": "Vector: Appending some elements and checking/getting"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_100_check_get_test", 
        "description": "Vector: Appending 100 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_1mil_check_get_test", 
        "description": "Vector: Appending 1000000 times and checking/getting elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_past_set_get_test", 
        "description": "Vector: Resize past capacity and set/get elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_set_resizesmall_test", 
        "description": "Vector: Resize, set elements resize smaller then get get all"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_greater_double_test", 
        "description": "Vector: Resizing greater than double capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "secret_test", 
        "description": "Vector: Secret test. Hope you don't fail this one..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_11_20_test", 
        "description": "Vector: Resizing to 11 then 20."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_check_NULL_test", 
        "description": "Vector: Resize and check that all elements are NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_NULL_test", 
        "description": "Vector: Appending NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "append_empty_test", 
        "description": "Vector: Appending an empty string"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_NULL_test", 
        "description": "Vector: Set null at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "set_empty_string_test", 
        "description": "Vector: Set an empty string at random index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "resize_check_no_alloc_test", 
        "description": "Vector: Resizing under capacity and checking for no allocs."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Big_test", 
        "description": "Vector: Too much stuff happening to count, but basically everything."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_one", 
        "description": "Vector: Inserting One entry"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_many", 
        "description": "Vector: Inserting a bunch of times"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "insert_beyond_index", 
        "description": "Vector: Inserting beyond index"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_small_vector", 
        "description": "Vector: Deleting a few entries..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "delete_full_vector", 
        "description": "Vector: Deleting a lot..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==16667== Memcheck, a memory error detector\n==16667== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==16667== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==16667== Command: ./mp/vector/svn/ddkim9/vector/vector_test 18\n==16667== \n==16667== \n==16667== HEAP SUMMARY:\n==16667==     in use at exit: 0 bytes in 0 blocks\n==16667==   total heap usage: 14 allocs, 14 frees, 396 bytes allocated\n==16667== \n==16667== All heap blocks were freed -- no leaks are possible\n==16667== \n==16667== For counts of detected and suppressed errors, rerun with: -v\n==16667== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "check_memory_vector", 
        "description": "Vector: Checking for memory issues for vector."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "document_empty_file", 
        "description": "Document: Test document write/read to/from file when document is empty."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_one_line", 
        "description": "Document: Test document write/read to/from file when document has 1 line in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_ten_line", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_multiple_write_read", 
        "description": "Document: Test document write/read to/from file multiple times with changes in between."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_empty_lines", 
        "description": "Document: Test document write/read to/from file when document has some empty lines."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==16697== Memcheck, a memory error detector\n==16697== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==16697== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==16697== Command: ././document_test 3\n==16697== \nIncorrect size of document: 0\n==16697== \n==16697== HEAP SUMMARY:\n==16697==     in use at exit: 568 bytes in 1 blocks\n==16697==   total heap usage: 20 allocs, 19 frees, 2,303 bytes allocated\n==16697== \n==16697== LEAK SUMMARY:\n==16697==    definitely lost: 0 bytes in 0 blocks\n==16697==    indirectly lost: 0 bytes in 0 blocks\n==16697==      possibly lost: 0 bytes in 0 blocks\n==16697==    still reachable: 568 bytes in 1 blocks\n==16697==         suppressed: 0 bytes in 0 blocks\n==16697== Reachable blocks (those to which a pointer was found) are not shown.\n==16697== To see them, rerun with: --leak-check=full --show-leak-kinds=all\n==16697== \n==16697== For counts of detected and suppressed errors, rerun with: -v\n==16697== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "document_check_memory", 
        "description": "Document: Test document write/read to/from file when document has 10 lines in it (but with valgrind)."
      }
    ], 
    "revision": "{2016-02-09}"
  }
]