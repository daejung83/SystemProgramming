[
  {
    "timestamp": "2016-01-25 15:02:59.049228", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 1", 
        "name": "part1_test1", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 2", 
        "name": "part1_test2", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 3", 
        "name": "part1_test3", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 4", 
        "name": "part1_test4", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 5", 
        "name": "part1_test5", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 6", 
        "name": "part1_test6", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 7", 
        "name": "part1_test7", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 8", 
        "name": "part1_test8", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 9", 
        "name": "part1_test9", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 10", 
        "name": "part1_test10", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 11", 
        "name": "part1_test11", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 12", 
        "name": "part1_test12", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 13", 
        "name": "part1_test13", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 14", 
        "name": "part1_test14", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 15", 
        "name": "part1_test15", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 16", 
        "name": "part1_test16", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 17", 
        "name": "part1_test17", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function 18", 
        "name": "part1_test18", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function clear_bits", 
        "name": "part1_test_clear_bits", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Test function little_automaton()", 
        "name": "part1_test_little_automaton", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Part1: Checking for memory issues...", 
        "name": "part1_memory", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\npart1-functions.c:203:3: error: statement requires expression of integer type ('const char *' invalid)\n  switch (s) {\n  ^       ~\npart1-functions.c:204:8: error: expression is not an integer constant expression\n  case \"blue\":\n       ^~~~~~\npart1-functions.c:208:8: error: expression is not an integer constant expression\n  case \"orange\":\n       ^~~~~~~~\npart1-functions.c:256:48: error: format specifies type 'double' but the argument has type 'int' [-Werror,-Wformat]\n  printf(\"The radius of the circle is: %f.\\n\", d / 2);\n                                       ~~      ^~~~~\n                                       %d\npart1-functions.c:266:5: error: read-only variable is not assignable\n  k = k * k;\n  ~ ^\npart1-functions.c:267:5: error: read-only variable is not assignable\n  k += k;\n  ~ ^\npart1-functions.c:268:5: error: read-only variable is not assignable\n  k *= k;\n  ~ ^\npart1-functions.c:269:5: error: read-only variable is not assignable\n  k -= 1;\n  ~ ^\npart1-functions.c:297:30: error: unused parameter 'value' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                             ^\npart1-functions.c:297:46: error: unused parameter 'flag' [-Werror,-Wunused-parameter]\nlong int clear_bits(long int value, long int flag) {\n                                             ^\npart1-functions.c:327:28: error: unused parameter 'transition' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                           ^\npart1-functions.c:327:64: error: unused parameter 'input_string' [-Werror,-Wunused-parameter]\nint little_automaton(int (*transition)(int, char), const char *input_string) {\n                                                               ^\n12 errors generated.\nmake: *** [.objs/part1-functions-release.o] Error 1\n"
      }, 
      {
        "ptsPossible": 11.0, 
        "ptsEarned": 0.0, 
        "description": "Part2: Test function main", 
        "name": "part2_test_main", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part2: Checking for memory issues...", 
        "name": "part2_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==10828== Memcheck, a memory error detector\n==10828== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==10828== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==10828== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==10828== \n==10828== \n==10828== HEAP SUMMARY:\n==10828==     in use at exit: 0 bytes in 0 blocks\n==10828==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==10828== \n==10828== All heap blocks were freed -- no leaks are possible\n==10828== \n==10828== For counts of detected and suppressed errors, rerun with: -v\n==10828== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-01}"
  }, 
  {
    "timestamp": "2016-01-26 04:03:12.020499", 
    "testcases": [
      {
        "description": "Part1: Test function 1", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test1", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 2", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test2", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 3", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test3", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 4", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test4", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 5", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test5", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 6", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test6", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 7", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test7", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 8", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test8", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 9", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test9", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 10", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test10", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 11", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test11", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 12", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test12", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 13", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test13", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 14", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test14", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 15", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test15", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 16", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test16", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 17", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test17", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 18", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test18", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function clear_bits", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test_clear_bits", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function little_automaton()", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test_little_automaton", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Checking for memory issues...", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==9084== Memcheck, a memory error detector\n==9084== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==9084== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==9084== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory\n==9084== \n==9084== Invalid write of size 2\n==9084==    at 0x400874: eight (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084==    by 0x400F0D: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084==  Address 0x51f60e4 is 4 bytes inside a block of size 5 alloc'd\n==9084==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==9084==    by 0x40086A: eight (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084==    by 0x400F0D: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084== \n==9084== Invalid read of size 1\n==9084==    at 0x4C2CBD4: __GI_strlen (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==9084==    by 0x4EA2E8B: puts (in /usr/lib64/libc-2.17.so)\n==9084==    by 0x400881: eight (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084==    by 0x400F0D: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084==  Address 0x51f60e5 is 0 bytes after a block of size 5 alloc'd\n==9084==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==9084==    by 0x40086A: eight (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084==    by 0x400F0D: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084== \n==9084== \n==9084== HEAP SUMMARY:\n==9084==     in use at exit: 480 bytes in 11 blocks\n==9084==   total heap usage: 15 allocs, 4 frees, 499 bytes allocated\n==9084== \n==9084== 480 (80 direct, 400 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2\n==9084==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==9084==    by 0x4009EE: thirteen (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084==    by 0x400F83: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==9084== \n==9084== LEAK SUMMARY:\n==9084==    definitely lost: 80 bytes in 1 blocks\n==9084==    indirectly lost: 400 bytes in 10 blocks\n==9084==      possibly lost: 0 bytes in 0 blocks\n==9084==    still reachable: 0 bytes in 0 blocks\n==9084==         suppressed: 0 bytes in 0 blocks\n==9084== \n==9084== For counts of detected and suppressed errors, rerun with: -v\n==9084== ERROR SUMMARY: 4 errors from 3 contexts (suppressed: 2 from 2)\n\nMEMORY ERROR/LEAK!", 
        "name": "part1_memory", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part2: Test function main", 
        "ptsEarned": 10.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part2_test_main", 
        "ptsPossible": 11.0
      }, 
      {
        "description": "Part2: Checking for memory issues...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==9098== Memcheck, a memory error detector\n==9098== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==9098== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==9098== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==9098== \n==9098== \n==9098== HEAP SUMMARY:\n==9098==     in use at exit: 0 bytes in 0 blocks\n==9098==   total heap usage: 4 allocs, 4 frees, 56 bytes allocated\n==9098== \n==9098== All heap blocks were freed -- no leaks are possible\n==9098== \n==9098== For counts of detected and suppressed errors, rerun with: -v\n==9098== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "part2_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-01}"
  }, 
  {
    "timestamp": "2016-01-27 04:03:06.110091", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test1", 
        "description": "Part1: Test function 1"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test2", 
        "description": "Part1: Test function 2"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test3", 
        "description": "Part1: Test function 3"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test4", 
        "description": "Part1: Test function 4"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test5", 
        "description": "Part1: Test function 5"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test6", 
        "description": "Part1: Test function 6"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test7", 
        "description": "Part1: Test function 7"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test8", 
        "description": "Part1: Test function 8"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test9", 
        "description": "Part1: Test function 9"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test10", 
        "description": "Part1: Test function 10"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test11", 
        "description": "Part1: Test function 11"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test12", 
        "description": "Part1: Test function 12"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test13", 
        "description": "Part1: Test function 13"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test14", 
        "description": "Part1: Test function 14"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test15", 
        "description": "Part1: Test function 15"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test16", 
        "description": "Part1: Test function 16"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test17", 
        "description": "Part1: Test function 17"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test18", 
        "description": "Part1: Test function 18"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test_clear_bits", 
        "description": "Part1: Test function clear_bits"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test_little_automaton", 
        "description": "Part1: Test function little_automaton()"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==30169== Memcheck, a memory error detector\n==30169== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==30169== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==30169== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory\n==30169== \n==30169== Invalid write of size 2\n==30169==    at 0x400874: eight (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==30169==    by 0x400F8D: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==30169==  Address 0x51f60e4 is 4 bytes inside a block of size 5 alloc'd\n==30169==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==30169==    by 0x40086A: eight (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==30169==    by 0x400F8D: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==30169== \n==30169== Invalid read of size 1\n==30169==    at 0x4C2CBD4: __GI_strlen (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==30169==    by 0x4EA2E8B: puts (in /usr/lib64/libc-2.17.so)\n==30169==    by 0x400881: eight (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==30169==    by 0x400F8D: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==30169==  Address 0x51f60e5 is 0 bytes after a block of size 5 alloc'd\n==30169==    at 0x4C29BFD: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)\n==30169==    by 0x40086A: eight (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==30169==    by 0x400F8D: main (in /home/btruong2/code/cs241/autograder/mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory)\n==30169== \n==30169== \n==30169== HEAP SUMMARY:\n==30169==     in use at exit: 0 bytes in 0 blocks\n==30169==   total heap usage: 15 allocs, 15 frees, 499 bytes allocated\n==30169== \n==30169== All heap blocks were freed -- no leaks are possible\n==30169== \n==30169== For counts of detected and suppressed errors, rerun with: -v\n==30169== ERROR SUMMARY: 3 errors from 2 contexts (suppressed: 2 from 2)\n\nMEMORY ERROR/LEAK!", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "part1_memory", 
        "description": "Part1: Checking for memory issues..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 11.0, 
        "ptsPossible": 11.0, 
        "name": "part2_test_main", 
        "description": "Part2: Test function main"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==30183== Memcheck, a memory error detector\n==30183== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==30183== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==30183== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==30183== \n==30183== \n==30183== HEAP SUMMARY:\n==30183==     in use at exit: 0 bytes in 0 blocks\n==30183==   total heap usage: 5 allocs, 5 frees, 76 bytes allocated\n==30183== \n==30183== All heap blocks were freed -- no leaks are possible\n==30183== \n==30183== For counts of detected and suppressed errors, rerun with: -v\n==30183== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part2_memory", 
        "description": "Part2: Checking for memory issues..."
      }
    ], 
    "revision": "{2016-02-01}"
  }, 
  {
    "timestamp": "2016-01-28 04:03:07.564464", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 1", 
        "name": "part1_test1", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 2", 
        "name": "part1_test2", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 3", 
        "name": "part1_test3", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 4", 
        "name": "part1_test4", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 5", 
        "name": "part1_test5", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 6", 
        "name": "part1_test6", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 7", 
        "name": "part1_test7", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 8", 
        "name": "part1_test8", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 9", 
        "name": "part1_test9", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 10", 
        "name": "part1_test10", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 11", 
        "name": "part1_test11", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 12", 
        "name": "part1_test12", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 13", 
        "name": "part1_test13", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 14", 
        "name": "part1_test14", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 15", 
        "name": "part1_test15", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 16", 
        "name": "part1_test16", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 17", 
        "name": "part1_test17", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 18", 
        "name": "part1_test18", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function clear_bits", 
        "name": "part1_test_clear_bits", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function little_automaton()", 
        "name": "part1_test_little_automaton", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Checking for memory issues...", 
        "name": "part1_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==29730== Memcheck, a memory error detector\n==29730== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==29730== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==29730== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory\n==29730== \n==29730== \n==29730== HEAP SUMMARY:\n==29730==     in use at exit: 0 bytes in 0 blocks\n==29730==   total heap usage: 15 allocs, 15 frees, 500 bytes allocated\n==29730== \n==29730== All heap blocks were freed -- no leaks are possible\n==29730== \n==29730== For counts of detected and suppressed errors, rerun with: -v\n==29730== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }, 
      {
        "ptsPossible": 11.0, 
        "ptsEarned": 11.0, 
        "description": "Part2: Test function main", 
        "name": "part2_test_main", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part2: Checking for memory issues...", 
        "name": "part2_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==29744== Memcheck, a memory error detector\n==29744== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==29744== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==29744== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==29744== \n==29744== \n==29744== HEAP SUMMARY:\n==29744==     in use at exit: 0 bytes in 0 blocks\n==29744==   total heap usage: 5 allocs, 5 frees, 76 bytes allocated\n==29744== \n==29744== All heap blocks were freed -- no leaks are possible\n==29744== \n==29744== For counts of detected and suppressed errors, rerun with: -v\n==29744== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-01}"
  }, 
  {
    "timestamp": "2016-01-29 13:10:18.710325", 
    "testcases": [
      {
        "description": "Part1: Test function 1", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test1", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 2", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test2", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 3", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test3", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 4", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test4", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 5", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test5", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 6", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test6", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 7", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test7", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 8", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test8", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 9", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test9", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 10", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test10", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 11", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test11", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 12", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test12", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 13", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test13", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 14", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test14", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 15", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test15", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 16", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test16", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 17", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test17", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 18", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test18", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function clear_bits", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test_clear_bits", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function little_automaton()", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test_little_automaton", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Checking for memory issues...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==26302== Memcheck, a memory error detector\n==26302== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==26302== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==26302== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory\n==26302== \n==26302== \n==26302== HEAP SUMMARY:\n==26302==     in use at exit: 0 bytes in 0 blocks\n==26302==   total heap usage: 15 allocs, 15 frees, 500 bytes allocated\n==26302== \n==26302== All heap blocks were freed -- no leaks are possible\n==26302== \n==26302== For counts of detected and suppressed errors, rerun with: -v\n==26302== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "part1_memory", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part2: Test function main", 
        "ptsEarned": 11.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part2_test_main", 
        "ptsPossible": 11.0
      }, 
      {
        "description": "Part2: Checking for memory issues...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==26316== Memcheck, a memory error detector\n==26316== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==26316== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==26316== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==26316== \n==26316== \n==26316== HEAP SUMMARY:\n==26316==     in use at exit: 0 bytes in 0 blocks\n==26316==   total heap usage: 5 allocs, 5 frees, 76 bytes allocated\n==26316== \n==26316== All heap blocks were freed -- no leaks are possible\n==26316== \n==26316== For counts of detected and suppressed errors, rerun with: -v\n==26316== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "part2_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-01}"
  }, 
  {
    "timestamp": "2016-01-30 04:02:20.786339", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test1", 
        "description": "Part1: Test function 1"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test2", 
        "description": "Part1: Test function 2"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test3", 
        "description": "Part1: Test function 3"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test4", 
        "description": "Part1: Test function 4"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test5", 
        "description": "Part1: Test function 5"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test6", 
        "description": "Part1: Test function 6"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test7", 
        "description": "Part1: Test function 7"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test8", 
        "description": "Part1: Test function 8"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test9", 
        "description": "Part1: Test function 9"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test10", 
        "description": "Part1: Test function 10"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test11", 
        "description": "Part1: Test function 11"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test12", 
        "description": "Part1: Test function 12"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test13", 
        "description": "Part1: Test function 13"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test14", 
        "description": "Part1: Test function 14"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test15", 
        "description": "Part1: Test function 15"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test16", 
        "description": "Part1: Test function 16"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test17", 
        "description": "Part1: Test function 17"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test18", 
        "description": "Part1: Test function 18"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test_clear_bits", 
        "description": "Part1: Test function clear_bits"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_test_little_automaton", 
        "description": "Part1: Test function little_automaton()"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==9062== Memcheck, a memory error detector\n==9062== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==9062== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==9062== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory\n==9062== \n==9062== \n==9062== HEAP SUMMARY:\n==9062==     in use at exit: 0 bytes in 0 blocks\n==9062==   total heap usage: 15 allocs, 15 frees, 500 bytes allocated\n==9062== \n==9062== All heap blocks were freed -- no leaks are possible\n==9062== \n==9062== For counts of detected and suppressed errors, rerun with: -v\n==9062== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part1_memory", 
        "description": "Part1: Checking for memory issues..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 11.0, 
        "ptsPossible": 11.0, 
        "name": "part2_test_main", 
        "description": "Part2: Test function main"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==9076== Memcheck, a memory error detector\n==9076== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==9076== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==9076== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==9076== \n==9076== \n==9076== HEAP SUMMARY:\n==9076==     in use at exit: 0 bytes in 0 blocks\n==9076==   total heap usage: 5 allocs, 5 frees, 76 bytes allocated\n==9076== \n==9076== All heap blocks were freed -- no leaks are possible\n==9076== \n==9076== For counts of detected and suppressed errors, rerun with: -v\n==9076== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "part2_memory", 
        "description": "Part2: Checking for memory issues..."
      }
    ], 
    "revision": "{2016-02-01}"
  }, 
  {
    "timestamp": "2016-01-31 04:02:22.580221", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 1", 
        "name": "part1_test1", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 2", 
        "name": "part1_test2", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 3", 
        "name": "part1_test3", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 4", 
        "name": "part1_test4", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 5", 
        "name": "part1_test5", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 6", 
        "name": "part1_test6", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 7", 
        "name": "part1_test7", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 8", 
        "name": "part1_test8", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 9", 
        "name": "part1_test9", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 10", 
        "name": "part1_test10", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 11", 
        "name": "part1_test11", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 12", 
        "name": "part1_test12", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 13", 
        "name": "part1_test13", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 14", 
        "name": "part1_test14", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 15", 
        "name": "part1_test15", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 16", 
        "name": "part1_test16", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 17", 
        "name": "part1_test17", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function 18", 
        "name": "part1_test18", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function clear_bits", 
        "name": "part1_test_clear_bits", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Test function little_automaton()", 
        "name": "part1_test_little_automaton", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part1: Checking for memory issues...", 
        "name": "part1_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==31962== Memcheck, a memory error detector\n==31962== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==31962== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==31962== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory\n==31962== \n==31962== \n==31962== HEAP SUMMARY:\n==31962==     in use at exit: 0 bytes in 0 blocks\n==31962==   total heap usage: 15 allocs, 15 frees, 500 bytes allocated\n==31962== \n==31962== All heap blocks were freed -- no leaks are possible\n==31962== \n==31962== For counts of detected and suppressed errors, rerun with: -v\n==31962== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }, 
      {
        "ptsPossible": 11.0, 
        "ptsEarned": 11.0, 
        "description": "Part2: Test function main", 
        "name": "part2_test_main", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Part2: Checking for memory issues...", 
        "name": "part2_memory", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==31976== Memcheck, a memory error detector\n==31976== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==31976== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==31976== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==31976== \n==31976== \n==31976== HEAP SUMMARY:\n==31976==     in use at exit: 0 bytes in 0 blocks\n==31976==   total heap usage: 5 allocs, 5 frees, 76 bytes allocated\n==31976== \n==31976== All heap blocks were freed -- no leaks are possible\n==31976== \n==31976== For counts of detected and suppressed errors, rerun with: -v\n==31976== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n"
      }
    ], 
    "revision": "{2016-02-01}"
  }, 
  {
    "timestamp": "2016-02-01 04:02:29.677837", 
    "testcases": [
      {
        "description": "Part1: Test function 1", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test1", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 2", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test2", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 3", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test3", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 4", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test4", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 5", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test5", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 6", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test6", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 7", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test7", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 8", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test8", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 9", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test9", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 10", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test10", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 11", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test11", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 12", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test12", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 13", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test13", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 14", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test14", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 15", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test15", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 16", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test16", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 17", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test17", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function 18", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test18", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function clear_bits", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test_clear_bits", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Test function little_automaton()", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part1_test_little_automaton", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part1: Checking for memory issues...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==23906== Memcheck, a memory error detector\n==23906== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==23906== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==23906== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory\n==23906== \n==23906== \n==23906== HEAP SUMMARY:\n==23906==     in use at exit: 0 bytes in 0 blocks\n==23906==   total heap usage: 15 allocs, 15 frees, 500 bytes allocated\n==23906== \n==23906== All heap blocks were freed -- no leaks are possible\n==23906== \n==23906== For counts of detected and suppressed errors, rerun with: -v\n==23906== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "part1_memory", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Part2: Test function main", 
        "ptsEarned": 11.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "part2_test_main", 
        "ptsPossible": 11.0
      }, 
      {
        "description": "Part2: Checking for memory issues...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==23920== Memcheck, a memory error detector\n==23920== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==23920== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==23920== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==23920== \n==23920== \n==23920== HEAP SUMMARY:\n==23920==     in use at exit: 0 bytes in 0 blocks\n==23920==   total heap usage: 5 allocs, 5 frees, 76 bytes allocated\n==23920== \n==23920== All heap blocks were freed -- no leaks are possible\n==23920== \n==23920== For counts of detected and suppressed errors, rerun with: -v\n==23920== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "name": "part2_memory", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "{2016-02-01}"
  }, 
  {
    "timestamp": "2016-02-01 15:06:16.091970", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test1", 
        "description": "Part1: Test function 1"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test2", 
        "description": "Part1: Test function 2"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test3", 
        "description": "Part1: Test function 3"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test4", 
        "description": "Part1: Test function 4"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test5", 
        "description": "Part1: Test function 5"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test6", 
        "description": "Part1: Test function 6"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test7", 
        "description": "Part1: Test function 7"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test8", 
        "description": "Part1: Test function 8"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test9", 
        "description": "Part1: Test function 9"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test10", 
        "description": "Part1: Test function 10"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test11", 
        "description": "Part1: Test function 11"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test12", 
        "description": "Part1: Test function 12"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test13", 
        "description": "Part1: Test function 13"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test14", 
        "description": "Part1: Test function 14"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test15", 
        "description": "Part1: Test function 15"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test16", 
        "description": "Part1: Test function 16"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test17", 
        "description": "Part1: Test function 17"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test18", 
        "description": "Part1: Test function 18"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test_clear_bits", 
        "description": "Part1: Test function clear_bits"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_test_little_automaton", 
        "description": "Part1: Test function little_automaton()"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==7343== Memcheck, a memory error detector\n==7343== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==7343== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==7343== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part1-memory\n==7343== \n==7343== \n==7343== HEAP SUMMARY:\n==7343==     in use at exit: 0 bytes in 0 blocks\n==7343==   total heap usage: 15 allocs, 15 frees, 500 bytes allocated\n==7343== \n==7343== All heap blocks were freed -- no leaks are possible\n==7343== \n==7343== For counts of detected and suppressed errors, rerun with: -v\n==7343== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part1_memory", 
        "description": "Part1: Checking for memory issues..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 11.0, 
        "ptsEarned": 11.0, 
        "name": "part2_test_main", 
        "description": "Part2: Test function main"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==7357== Memcheck, a memory error detector\n==7357== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.\n==7357== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info\n==7357== Command: ./mp/pointers_gone_wild/svn/ddkim9/pointers_gone_wild/part2\n==7357== \n==7357== \n==7357== HEAP SUMMARY:\n==7357==     in use at exit: 0 bytes in 0 blocks\n==7357==   total heap usage: 5 allocs, 5 frees, 76 bytes allocated\n==7357== \n==7357== All heap blocks were freed -- no leaks are possible\n==7357== \n==7357== For counts of detected and suppressed errors, rerun with: -v\n==7357== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "part2_memory", 
        "description": "Part2: Checking for memory issues..."
      }
    ], 
    "revision": "{2016-02-02}"
  }
]