[
  {
    "timestamp": "2016-02-18 18:54:46.129131", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if history works (you need to have basic non-builtin commands working)", 
        "name": "check_history", 
        "log": "Error: Failed to find output of correct history"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if we can rerun a command by last closest match (need to have non-builtin commands working)", 
        "name": "query_search_history", 
        "log": "Error: failed to run queried command"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if we can rerun a command by index (need to have non-builtin commands working)", 
        "name": "query_index_history", 
        "log": "Error: Failed to run command by index"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if we can rerun a command by last closest match (hard version and need to have non-builtin commands working)", 
        "name": "query_search_history_hard", 
        "log": "Error: failed to run queried command"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if we can rerun a command by index (you need to have all commands working for this)", 
        "name": "query_index_history_hard", 
        "log": "Error: Failed to run command by index"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if rerunning a nonexistent command by invalid query fails", 
        "name": "invalid_query_search_history", 
        "log": "Error: couldn't find error for not finding matching prefix in history"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if rerunning a nonexistent command by history index fails.", 
        "name": "invalid_query_index_history", 
        "log": "Error: couldn't find error message for running invalid index"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Memory test easy.", 
        "name": "memory_check", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Memory check hard (all features need to work for this).", 
        "name": "memory_check_hard", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Check that shell prompts with netid", 
        "name": "shell_by_netid", 
        "log": "Error: failed to print Shell by <netid>"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if shell exits correctly", 
        "name": "exits", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Testing echo and printing.", 
        "name": "print_test", 
        "log": "Error: command did not run"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Run 1 command with -f (you should have commands working already).", 
        "name": "file_test", 
        "log": "Program failed to print out commands read from file"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Runs more commands with -f (you should have commands working already).", 
        "name": "file_test_hard", 
        "log": "Error when running test - Perhaps program timedout (did your shell take in inputs after executing commands in file?)"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Attempt to cd to a directory", 
        "name": "cd_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking that invalid commands are invalidated (you should have commands working already).", 
        "name": "invalid_command", 
        "log": "Error: couldn't find error message for running invalid command"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if we can run a process in the background (this test will not pass if you do not have the basic non-built in command features implemented)", 
        "name": "check_background_process", 
        "log": "Error: Command did not run immediately after we backgrounded a process"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Checking if SIGINT is blocked", 
        "name": "control_c_test", 
        "log": "Shell quit with sigint"
      }
    ], 
    "revision": "(Pull Time: 2016-02-23 | Revision # 25882)"
  }, 
  {
    "timestamp": "2016-02-19 04:04:02.338837", 
    "testcases": [
      {
        "description": "Checking if history works (you need to have basic non-builtin commands working)", 
        "ptsEarned": 0.0, 
        "log": "Error: Failed to find output of correct history", 
        "name": "check_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can rerun a command by last closest match (need to have non-builtin commands working)", 
        "ptsEarned": 0.0, 
        "log": "Error: failed to run queried command", 
        "name": "query_search_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can rerun a command by index (need to have non-builtin commands working)", 
        "ptsEarned": 0.0, 
        "log": "Error: Failed to run command by index", 
        "name": "query_index_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can rerun a command by last closest match (hard version and need to have non-builtin commands working)", 
        "ptsEarned": 0.0, 
        "log": "Error: failed to run queried command", 
        "name": "query_search_history_hard", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can rerun a command by index (you need to have all commands working for this)", 
        "ptsEarned": 0.0, 
        "log": "Error: Failed to run command by index", 
        "name": "query_index_history_hard", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if rerunning a nonexistent command by invalid query fails", 
        "ptsEarned": 0.0, 
        "log": "Error: couldn't find error for not finding matching prefix in history", 
        "name": "invalid_query_search_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if rerunning a nonexistent command by history index fails.", 
        "ptsEarned": 0.0, 
        "log": "Error: couldn't find error message for running invalid index", 
        "name": "invalid_query_index_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Memory test easy.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "memory_check", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Memory check hard (all features need to work for this).", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "memory_check_hard", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Check that shell prompts with netid", 
        "ptsEarned": 0.0, 
        "log": "Error: failed to print Shell by <netid>", 
        "name": "shell_by_netid", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if shell exits correctly", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "exits", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Testing echo and printing.", 
        "ptsEarned": 0.0, 
        "log": "Error: command did not run", 
        "name": "print_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Run 1 command with -f (you should have commands working already).", 
        "ptsEarned": 0.0, 
        "log": "Program failed to print out commands read from file", 
        "name": "file_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Runs more commands with -f (you should have commands working already).", 
        "ptsEarned": 0.0, 
        "log": "Program failed to print out commands read from file or read all commands from file", 
        "name": "file_test_hard", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Attempt to cd to a directory", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "cd_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking that invalid commands are invalidated (you should have commands working already).", 
        "ptsEarned": 0.0, 
        "log": "Error: couldn't find error message for running invalid command", 
        "name": "invalid_command", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can run a process in the background (this test will not pass if you do not have the basic non-built in command features implemented)", 
        "ptsEarned": 0.0, 
        "log": "Error: Command did not run immediately after we backgrounded a process", 
        "name": "check_background_process", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if SIGINT is blocked", 
        "ptsEarned": 0.0, 
        "log": "Shell quit with sigint", 
        "name": "control_c_test", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "(Pull Time: 2016-02-23 | Revision # 26139)"
  }, 
  {
    "timestamp": "2016-02-20 04:02:59.928308", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "check_history", 
        "description": "Checking if history works (you need to have basic non-builtin commands working)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "query_search_history", 
        "description": "Checking if we can rerun a command by last closest match (need to have non-builtin commands working)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "query_index_history", 
        "description": "Checking if we can rerun a command by index (need to have non-builtin commands working)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "query_search_history_hard", 
        "description": "Checking if we can rerun a command by last closest match (hard version and need to have non-builtin commands working)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "query_index_history_hard", 
        "description": "Checking if we can rerun a command by index (you need to have all commands working for this)"
      }, 
      {
        "log": "Error: couldn't find error for not finding matching prefix in history", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "invalid_query_search_history", 
        "description": "Checking if rerunning a nonexistent command by invalid query fails"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "invalid_query_index_history", 
        "description": "Checking if rerunning a nonexistent command by history index fails."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMEMORY ERROR/LEAK!", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "memory_check", 
        "description": "Memory test easy."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "memory_check_hard", 
        "description": "Memory check hard (all features need to work for this)."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "shell_by_netid", 
        "description": "Check that shell prompts with netid"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "exits", 
        "description": "Checking if shell exits correctly"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "print_test", 
        "description": "Testing echo and printing."
      }, 
      {
        "log": "Program failed to print out commands read from file", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "file_test", 
        "description": "Run 1 command with -f (you should have commands working already)."
      }, 
      {
        "log": "Program failed to print out commands read from file or read all commands from file", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "file_test_hard", 
        "description": "Runs more commands with -f (you should have commands working already)."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "cd_test", 
        "description": "Attempt to cd to a directory"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "invalid_command", 
        "description": "Checking that invalid commands are invalidated (you should have commands working already)."
      }, 
      {
        "log": "Error: Command did not run immediately after we backgrounded a process", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "check_background_process", 
        "description": "Checking if we can run a process in the background (this test will not pass if you do not have the basic non-built in command features implemented)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "control_c_test", 
        "description": "Checking if SIGINT is blocked"
      }
    ], 
    "revision": "(Pull Time: 2016-02-23 | Revision # 26139)"
  }, 
  {
    "timestamp": "2016-02-21 04:03:02.325319", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if history works (you need to have basic non-builtin commands working)", 
        "name": "check_history", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if we can rerun a command by last closest match (need to have non-builtin commands working)", 
        "name": "query_search_history", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if we can rerun a command by index (need to have non-builtin commands working)", 
        "name": "query_index_history", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if we can rerun a command by last closest match (hard version and need to have non-builtin commands working)", 
        "name": "query_search_history_hard", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if we can rerun a command by index (you need to have all commands working for this)", 
        "name": "query_index_history_hard", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if rerunning a nonexistent command by invalid query fails", 
        "name": "invalid_query_search_history", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if rerunning a nonexistent command by history index fails.", 
        "name": "invalid_query_index_history", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Memory test easy.", 
        "name": "memory_check", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMEMORY ERROR/LEAK!"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Memory check hard (all features need to work for this).", 
        "name": "memory_check_hard", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Check that shell prompts with netid", 
        "name": "shell_by_netid", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if shell exits correctly", 
        "name": "exits", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Testing echo and printing.", 
        "name": "print_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Run 1 command with -f (you should have commands working already).", 
        "name": "file_test", 
        "log": "Program failed to print out commands read from file"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Runs more commands with -f (you should have commands working already).", 
        "name": "file_test_hard", 
        "log": "Program failed to print out commands read from file or read all commands from file"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Attempt to cd to a directory", 
        "name": "cd_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking that invalid commands are invalidated (you should have commands working already).", 
        "name": "invalid_command", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if we can run a process in the background (this test will not pass if you do not have the basic non-built in command features implemented)", 
        "name": "check_background_process", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Checking if SIGINT is blocked", 
        "name": "control_c_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }
    ], 
    "revision": "(Pull Time: 2016-02-23 | Revision # 26139)"
  }, 
  {
    "timestamp": "2016-02-22 08:54:33.418502", 
    "testcases": [
      {
        "description": "Checking if history works (you need to have basic non-builtin commands working)", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "check_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can rerun a command by last closest match (need to have non-builtin commands working)", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "query_search_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can rerun a command by index (need to have non-builtin commands working)", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "query_index_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can rerun a command by last closest match (hard version and need to have non-builtin commands working)", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "query_search_history_hard", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can rerun a command by index (you need to have all commands working for this)", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "query_index_history_hard", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if rerunning a nonexistent command by invalid query fails", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "invalid_query_search_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if rerunning a nonexistent command by history index fails.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "invalid_query_index_history", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Memory test easy.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMEMORY ERROR/LEAK!", 
        "name": "memory_check", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Memory check hard (all features need to work for this).", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMEMORY ERROR/LEAK!", 
        "name": "memory_check_hard", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Check that shell prompts with netid", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "shell_by_netid", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if shell exits correctly", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "exits", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Testing echo and printing.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "print_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Run 1 command with -f (you should have commands working already).", 
        "ptsEarned": 0.0, 
        "log": "Program failed to print out commands read from file", 
        "name": "file_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Runs more commands with -f (you should have commands working already).", 
        "ptsEarned": 0.0, 
        "log": "Program failed to print out commands read from file or read all commands from file", 
        "name": "file_test_hard", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Attempt to cd to a directory", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "cd_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking that invalid commands are invalidated (you should have commands working already).", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "invalid_command", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if we can run a process in the background (this test will not pass if you do not have the basic non-built in command features implemented)", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "check_background_process", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Checking if SIGINT is blocked", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "control_c_test", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "(Pull Time: 2016-02-23 | Revision # 28639)"
  }, 
  {
    "timestamp": "2016-02-23 00:05:26.545949", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "check_history", 
        "description": "Checking if history works (you need to have basic non-builtin commands working)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "query_search_history", 
        "description": "Checking if we can rerun a command by last closest match (need to have non-builtin commands working)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "query_index_history", 
        "description": "Checking if we can rerun a command by index (need to have non-builtin commands working)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "query_search_history_hard", 
        "description": "Checking if we can rerun a command by last closest match (hard version and need to have non-builtin commands working)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "query_index_history_hard", 
        "description": "Checking if we can rerun a command by index (you need to have all commands working for this)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "invalid_query_search_history", 
        "description": "Checking if rerunning a nonexistent command by invalid query fails"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "invalid_query_index_history", 
        "description": "Checking if rerunning a nonexistent command by history index fails."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMEMORY ERROR/LEAK!", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "memory_check", 
        "description": "Memory test easy."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nMEMORY ERROR/LEAK!", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "memory_check_hard", 
        "description": "Memory check hard (all features need to work for this)."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "shell_by_netid", 
        "description": "Check that shell prompts with netid"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "exits", 
        "description": "Checking if shell exits correctly"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "print_test", 
        "description": "Testing echo and printing."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "file_test", 
        "description": "Run 1 command with -f (you should have commands working already)."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "file_test_hard", 
        "description": "Runs more commands with -f (you should have commands working already)."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "cd_test", 
        "description": "Attempt to cd to a directory"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "invalid_command", 
        "description": "Checking that invalid commands are invalidated (you should have commands working already)."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "check_background_process", 
        "description": "Checking if we can run a process in the background (this test will not pass if you do not have the basic non-built in command features implemented)"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "control_c_test", 
        "description": "Checking if SIGINT is blocked"
      }
    ], 
    "revision": "(Pull Time: 2016-02-23 | Revision # 30393)"
  }
]